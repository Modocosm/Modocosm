---
import Demo from "src/layouts/demo.astro";
import { Code } from 'astro:components';
import { createDirectus, authentication,rest, readItems } from '@directus/sdk';
const email = 'info@modocosm.io';
const password = '3G@&Lx3r#GKLen4q';
const client = createDirectus('https://modocosm.up.railway.app/').with(authentication()).with(rest());
await client.login(email, password);
const result = await client.request(
    readItems('Pages', {
        fields: ['*',"*.Slug",{Slice_Master:['*', { item:['*',{Content_Block:['*'], CTA_Hero:['*'] }] }] }],
    })                                                                                                                                                                             
);
const formattedPages = result.map((page) => {
    return {
        ...page, Slug: page.Slug.replace(/\/$/, "")
    }
});
const [page] = formattedPages;

const meta = await client.request(readItems('Modocosm_Core'));
export const content = {
    "title": "Modocosm Demo Env", 
    "fonts": [ "https://fonts.googleapis.com/css2?family=Work+Sans:wght@300;400;600;700;800;900&display=swap" ], 
    "description": "Modocosm Demo Env", 
    "keywords": "Modocosm, Astro, AstroJS, AtroJSX, AstroJSXComponents, AstroJSXComponentsLibrary, AstroJSXComponentsLibraryDemo, AstroJSXComponentsLibraryDemoEnv, AstroJSXComponentsLibraryDemoEnvModocosm, AstroJSXComponentsLibraryDemoEnvModocosmDemoEnv",     "author": "JugaadiTech", 
    "file": "C:/Users/William/Documents/GitHub/modo/Modocosmio/src/pages/index.mdx", 
    "url": ""
};
export const Slug = "index";
---

<Demo content={content}>
    <div style = "padding-top:128px;"></div>
    <mc-container>
        <mc-inner-container>
            <h1>Page List</h1>
            <ul>
                {result.map((item) => (
                    <li>
                        <a href={'/'+item.Slug}>{item.Title}</a>
                    </li>
                    // <Code lang="json" code={JSON.stringify(item, null, 2)}/>
                ))}
            </ul>
            <Code lang="json" code={JSON.stringify(result, null, 2)}/>
        </mc-inner-container>
    </mc-container>
    <!-- <h1>Result</h1> -->
    <!-- {result[0].Slice_Master.map((item) => (
        <Code lang="json" code={JSON.stringify(item, null, 2)}/>
    ))}
    <Code lang="json" code={JSON.stringify(result, null, 2)}/>
    



    
    <h1>Meta</h1>
    <Code lang="json" code={JSON.stringify(meta, null, 2)}/> -->
</Demo>

<style>
    body{
        background:#121212;
        color:white;
    }
    h1, h2, h3, h4, h5, h6 {
        color:#e4e4e4;
    }
    ul {
        margin-left:unset;
        padding-left:unset;
        list-style: none;
    }
    li {
        list-style-type: none;
        display:inline-block;
        /* Glassmorphism */
        background: rgba( 150, 0, 255, 0.25 );
        box-shadow: 0 8px 32px 0 rgba( 31, 38, 135, 0.37 );
        backdrop-filter: blur( 4px );
        -webkit-backdrop-filter: blur( 4px );
        border-radius: 10px;
        border: 1px solid rgba( 255, 255, 255, 0.18 );
        padding: 16px;
        margin-bottom: 16px;
        margin-right:16px;
        margin-left:unset;
    }
    li a {
        color: #fff;
        font-weight: 700;
        text-decoration: none;
        text-transform:uppercase;
    }
</style>